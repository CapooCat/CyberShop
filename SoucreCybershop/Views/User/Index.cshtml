
@{
    ViewBag.Title = "UserInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model CyberShop.Models.UserViewModel
@section style{
    <style>
        .alert {
            padding: 20px;
            background-color: #f44336;
            color: white;
            opacity: 1;
            transition: opacity 0.6s;
            margin-bottom: 15px;
        }

            .alert.success {
                background-color: #58EA64;
            }

            .alert.info {
                background-color: #2196F3;
            }

            .alert.warning {
                background-color: #ff9800;
            }

        .closebtn {
            margin-left: 15px;
            color: white;
            font-weight: bold;
            float: right;
            font-size: 22px;
            line-height: 20px;
            cursor: pointer;
            transition: 0.3s;
        }

            .closebtn:hover {
                color: black;
            }
    </style>
}
<section class="container" style="padding-top: 160px; padding-bottom: 50px;">
    <h3><i class="fas fa-user-cog" style="margin-right: 10px;"></i>Thông tin người dùng</h3>
    <ul class="breadcrumb Page-address">
        <li class="breadcrumb-item"><a href="#"><i class="fas fa-home" style="margin-right: 10px"></i>Trang chủ</a></li>
        <li class="breadcrumb-item active">Thông tin người dùng</li>
    </ul>
    <h1 style="text-align: center; margin: 50px;">Thông tin người dùng</h1>
        @if (ViewBag.Warning != null)
        {
            <div class="alert warning">
                <span class="closebtn">&times;</span>
                <strong></strong><div style="text-align:center">Vui lòng nhập đầy đủ thông tin cần thiết</div>
            </div>
        }
    <div class="error" id="Post_Error">
        <ul>
            @Html.ValidationSummary(false, "", "alert alert-danger")
        </ul>
    </div>
    <div class="row">
        <form method="post" action="/User">
        <div class="col-md-6 input-info">
            <h6>
                @*<input type="text" placeholder="Họ và tên..." name="search">*@
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model=>model.Name, new {@*@name="search"*@})
            </h6>
            <h6>
                @*<input type="text" placeholder="Tên tài khoản..." name="search">*@
                @Html.LabelFor(model => model.Username)
                @Html.TextBoxFor(model => model.Username, new { @value = Model.Username,@*@name = "search"*@ @readonly=true, })
            </h6>
            <h6>
                @*<input type="text" placeholder="Email..." name="search">*@
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @value = Model.Email, @*@name = "search",*@ @readonly = true, })
            </h6>
        </div>
        <div class="col-md-6 input-info">
            <h6>
                @*<input type="text" placeholder="Số điện thoại..." name="search">*@
                @Html.LabelFor(model => model.PhoneNum)
                @Html.TextBoxFor(model => model.PhoneNum, new { @*@name = "search"*@ @id="key"})
            </h6>
            <h6>
                @*<input type="text" placeholder="Địa chỉ..." name="search">*@
                @Html.LabelFor(model => model.Address)
                @Html.TextBoxFor(model => model.Address, new { @*@name = "search"*@ })
            </h6>
            @Html.LabelFor(model => model.City)
            <div class="form-group">
                @*<select id="province" class="form-control" data-role="select-dropdown" data-profile="minimal">
                    <option value="" disabled selected>Chọn tỉnh thành...</option>
                    <option value="Hồ Chí Minh">Hồ Chí Minh</option>
                    <option value="Hà Nội">Hà Nội</option>
                </select>*@
                @Html.DropDownListFor(model => model.City,
                    new List<SelectListItem> {
                       new SelectListItem { Value = null , Text = "Chọn tỉnh thành",Disabled=true,Selected=true },
                       new SelectListItem { Value = "Hồ Chí Minh" , Text = "Hồ Chí Minh" },
                       new SelectListItem { Value = "Hà Nội" , Text = "Hà Nội" }
                        },
                    new { @class = "form-control", @data_role = "select-dropdown", @data_profile = "minimal", @required = true,@id="province" })
            </div>


        </div>
        <div class="btn-submit col-md-12">
            <button type="submit">Xác nhận thay đổi</button>
        </div>
        </form>
    </div>

    <h1 style="text-align: center; margin: 50px;">Lịch sử mua hàng</h1>
    <table>
        <tr>
            <th style="width: 10%;">Mã hóa đơn</th>
            <th style="width: 35%;">Tên sản phẩm</th>
            <th style="width: 10%;">Số lượng</th>
            <th style="width: 20%;">Giá</th>
            <th style="width: 15%;">Ngày mua</th>
            <th style="width: 10%;">Tình trạng</th>
        </tr>
        <tr>
            <td>1</td>
            <td><a href="#">ROG Strix GeForce® GTX 1650 4GB GDDR5</a></td>
            <td>1</td>
            <td>4.150.000đ</td>
            <td></td>
            <td></td>
        </tr>
        <tr>
            <td>2</td>
            <td><a href="#">ROG Strix GeForce® GTX 1650 4GB GDDR5</a></td>
            <td>1</td>
            <td>4.150.000đ</td>
            <td></td>
            <td></td>
        </tr>
    </table>
</section>
@section scripts{
<script>
    var close = document.getElementsByClassName("closebtn");
    var i;

    for (i = 0; i < close.length; i++) {
      close[i].onclick = function(){
        var div = this.parentElement;
        div.style.opacity = "0";
        setTimeout(function(){ div.style.display = "none"; }, 600);
      }
    }
</script>
<script type="text/javascript">
	    var myInput = document.getElementById('key');
	    myInput.addEventListener('keypress', function(e) {
      var key = !isNaN(e.charCode) ? e.charCode : e.keyCode;
      function keyAllowed() {
        var keys = [8,9,13,16,17,18,19,20,27,46,48,49,50,
                    51,52,53,54,55,56,57,91,92,93];
        if (key && keys.indexOf(key) === -1)
          return false;
        else
          return true;
  			    }
      if (!keyAllowed())
        e.preventDefault();
    }, false);
</script>
    }

